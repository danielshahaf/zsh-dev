#!/usr/bin/env zsh

## Global declarations
readonly AUTHOR_NAME="$(git config --get user.name)"
readonly UPSTREAM=origin/master
local ENDPOINT
readonly NAME=$0:t
export seqno

fail() { echo "${NAME}: $1" >&2; exit 1 }

usage() {
  cat >&2 <<EOF
$NAME: a zsh developer's add-X-Seq-and-ChangeLog script

Usage: $NAME NUMBER

Will prefix NUMBER to the log message of each local commit not yet
in $UPSTREAM, and amend the commit with a ChangeLog entry.  NUMBER may
be '42', 'users/42', 'unposted', or 'foo_' (arbitrary text followed by an
underscore, which will be stripped).

Prerequisite: git must have been compiled with PCRE support.
EOF
  exit ${1:-1}
}

## Require a recent zsh
if [[ $( (){ shift -p; echo $# } arg1 arg2 arg3 ) -ne 2 ]]; then
  fail "This script requires a zsh supporting 'shift -p'"
fi

## Argument parsing
if [[ $# -eq 1 ]] &&
   [[ $(git log -1 --pretty=%cn) == *"${AUTHOR_NAME}"* ]] &&
   true
then
  if [[ $1 == *_ ]]; then
    seqno=${1%?}
  elif [[ $1 == (<30000->*|users/<->|unposted*) ]]; then
    seqno=$1
  else
    usage
  fi
else
  usage
fi
[[ -n $seqno ]] || usage

## Validate worktree state
if [[ -n "`git status --porcelain ChangeLog`" ]]; then
  fail "ChangeLog has local mods"
fi

if ! git merge-base --is-ancestor $UPSTREAM HEAD; then
  fail "${(q-)UPSTREAM} must be an ancestor of HEAD, but isn't"
fi

## Set ENDPOINT to oldest commit such that $ENDPOINT..HEAD consists of commits
## by $AUTHOR_NAME that don't touch ChangeLog.

# We can't just 'git log --not --committer=$AUTHOR_NAME', since the --not is silently ignored.
# Hence we use --perl-regexp, even though it requires PCRE.
#
# Escaping of $AUTHOR_NAME: the value is trusted since it originates from ~/.gitconfig.  The
# purpose of the check isn't to trap shell injections but to ensure the regexp will have the
# intended meaning.  In straight Perl, we could escape arbitrary values of $AUTHOR_NAME by
# doing «--committer='^(?!\Q$ENV{AUTHOR_NAME}\E)'», but PCRE doesn't support that construct,
# so we simply bail out on values that would need to be escaped.  The character class used
# is based on the list of metacharacters in perlreref(1).
[[ $AUTHOR_NAME == *[\\.^\$*+?{}\(\)\[\]\|]* ]] && fail "\`git config --get user.name\` is not PCRE-safe; teach this script to escape it"
ENDPOINT=$(git log --perl-regexp --committer='^(?!\Q'$AUTHOR_NAME'\E)' -1 --pretty=%H)
() { 
  local arg
  # Arguments are youngest-to-oldest, so:
  while (( $# )); do
    arg=$argv[-1]
    if [[ $(git diff --name-only $arg^..$arg) != *ChangeLog* ]]; then
      ENDPOINT=$argv[-1]
      return
    fi
    shift -p
  done
} $(git rev-list $ENDPOINT..HEAD)

## Main body
seqno=$seqno \
  GIT_EDITOR='true' git rebase -i $ENDPOINT^ --exec \
    "$0-internal"
