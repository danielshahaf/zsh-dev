#!/usr/bin/env zsh
set -e

local NAME=$0:t

usage() {
  cat >&2 <<EOF
$NAME: a zsh developer's git-am wrapper script

Usage: $NAME FILE...
Usage: git format-patch --stdout | formail -s $NAME

Where each FILE is a workers@ or users@ message generated by git-format-patch(1) or
git-send-email(1), will apply each such patch using git-am(1) and then add
the X-Seq number to the log message and changelog using 'zshdev-add-nnnnn-and-changelog'.

Prerequisite: git must have been compiled with PCRE support.
EOF
  exit ${1:-1}
}

# This script takes filenames of emails, extracts the X-Seq headers therefrom,
# applies them with 'git am', and readies them for pushing by calling
# zshdev-add-nnnnn-and-changelog.

if [[ $1 == -* ]]; then
  usage
fi

handle_arg() {
  local arg=$1
  git am -c $arg
  if xseq=$(<$arg sed -n -e 's/^X-Seq: //p' -e '/^$/q' )
     [[ -n $xseq ]] 
  then
    if <$arg sed -e '/^$/q' | LC_ALL=C grep -i '^List-Id:' | grep -F -q '<zsh-users.zsh.org>'; then
      xseq="users/${xseq}"
    fi
    zshdev-add-nnnnn-and-changelog $xseq || { echo >&2 "$0: child exited $?"; exit 2 }
  else
    echo >&2 "$0: failed to parse X-Seq from ${(qq)arg}"
    exit 1
    break
  fi
}

if (( $# )) ; then
  for arg; do handle_arg "$arg"; done;
else
  handle_arg =(cat)
  exec 0<&-
fi

# review the results
tig "@{u}.." \
  < /dev/tty # in case we're invoked by formail
